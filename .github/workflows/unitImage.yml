name: Unit Test + Image + Deploy

on:
  push:
    branches:
      - 'main'
jobs:

  unit-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 17 + cache
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          # setup maven cache as well
          cache: maven
      - name: Unit-Test
        run: mvn test
        
  build-image:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 17 + cache
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          # setup maven cache as well
          cache: maven
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build to GitHub Container Registry
        # use jib plugin to build docker image
        run: >
          mvn compile
          com.google.cloud.tools:jib-maven-plugin:3.1.4:build
          -Djib.to.image=ghcr.io/the-microservice-dungeon/gamelog/gamelogservice
          -Djib.from.image=eclipse-temurin:17-alpine
  deploy:
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - name: stop-pull-run
        uses: appleboy/ssh-action@master
        env:
          SERVICE_NAME: game
        with:
          host: cides03.gm.fh-koeln.de
          username: ${{ secrets.PROD_USER }}
          password: ${{ secrets.PROD_PWD }}
          port: 22
          envs: SERVICE_NAME
          script: |
            echo ${{ secrets.PROD_PWD }} | sudo -S docker-compose -f $SERVICE_NAME/service-compose.yml pull
            echo ${{ secrets.PROD_PWD }} | sudo -S docker-compose -f $SERVICE_NAME/service-compose.yml up -d
