## Kafka Client
# Connection
kafka.consumer.enable = true
kafka.bootstrapAddress = ${KAFKA_BOOTSTRAP_ADDRESS}

# Topics (Producer)
kafka.groupId = game
kafka.topicProdRound = roundStatus
kafka.topicProdGame = status
kafka.topicProdPlayer = playerStatus

# Topics (Subscriber)
kafka.topicSubRobotSpawned = spawn-notification
kafka.topicSubRobotSpawned.group = robot-spawned-listener
kafka.topicSubRobotDestroyed = robot-destroyed
kafka.topicSubRobotDestroyed.group = robot-destroyed-listener

# Header
kafka.message.format.header.eventId = eventId



## REST
# Addresses
rest.robot.baseurl = ${ROBOT_SERVICE}
rest.trading.baseurl = ${TRADING_SERVICE}
rest.map.baseurl = ${MAP_SERVICE}


## Spring DATASOURCE
spring.datasource.url = jdbc:mysql://${DB_HOST}/${DB_NAME}?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true
spring.datasource.username = ${DB_USER}
spring.datasource.password = ${DB_PASSWORD}


## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto = update


## EventStore Properties
# {UPDATE, DELETE}, Decides whether published events should be deleted or marked as published
eventStore.publishingMode = UPDATE
eventStore.builderSuffix = Builder